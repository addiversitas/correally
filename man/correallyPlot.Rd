% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/correally.R
\name{correallyPlot}
\alias{correallyPlot}
\title{Create correally correlation plot}
\usage{
correallyPlot(
  data,
  mask = FALSE,
  color = "RdBu",
  theme = "default",
  width = NULL,
  height = NULL,
  keepRatio = TRUE,
  showGrid = TRUE
)
}
\arguments{
\item{data}{A matrix or data frame containing a correlation matrix. Must be numeric and symmetric.}

\item{mask}{A logical scalar. If \emph{TRUE}, removes the everything above and including the diagonal. Defaults to \emph{FALSE}.}

\item{color}{Either a vector of Base R colors (e.g. "red", "blue"), a vector of colors in hexadecimal #RRGGBB# format,
a colorbrewer2.org palette name (e.g. "YlOrRd", "BrBG") or a viridis palette name (e.g. "viridis", "magma", "inferno").
Defaults to "RdBu".}

\item{theme}{A character string of length 1 defining the name of a \link{shinythemes} template. Formatting will be applied to the background,
gridline color, colorbar framing and font color. Defaults to the "default" theme.}

\item{width}{Width in pixels (optional, defaults to automatic sizing).}

\item{height}{Height in pixels (optional, defaults to automatic sizing).}

\item{keepRatio}{A logical scalar. If \emph{TRUE}, keeps a 1:1 ratio between x and y axis size. Defaults to \emph{TRUE}.}

\item{showGrid}{A logical scalar. If \emph{TRUE}, displays gridlines. Defaults to \emph{TRUE}.}
}
\value{
Returns a plotly object.
}
\description{
This function creates an interactive visualization of a correlation matrix. It is based on the R implementation of \href{http://rstudio.com}{plotly.js},
an (MIT licensed) web-based interactive charting library. It provides a clean implementation for plotting correlation matrices, easy use of different
color schemes (Base R colors, Hex colors, \link{RColorBrewer} palettes as well as support for \link{viridisLite}). It also provides coloring options for backgrounds, grids and fonts
matching different \link{shinythemes}.
}
\examples{
data = cor(mtcars[,c(1,3:7)])

correallyPlot(data)
correallyPlot(data, mask = TRUE)

correallyPlot(data, mask = TRUE, color = "viridis", theme = "slate")

correallyPlot(data, mask = TRUE, width = 700, height = 500, keepRatio = FALSE, showGrid = FALSE)

}
